@import url("https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap");

* {
    font-family: "Open Sans", sans-serif;
    scroll-behavior: smooth;
}

:root {
    --background-color: white;
    --navbar-height: 4rem;
    --margin: 1rem;
    --primary-color: #00d7b5;
    --gray: rgb(49, 49, 49);
    --secondary-background-color: rgb(228, 228, 228);

    --circle-size: calc(1rem / 1.5);
    font-family: "Open Sans", sans-serif;
}

#root {
    background-color: var(--secondary-background-color);
    min-height: 100vh;
    min-width: 100vw;
}

.light-shadow {
    /* box-shadow: 0rem 0rem 0.5rem rgba(0, 0, 0, 0.25); */
    filter: drop-shadow(0 0 0.25rem rgba(0, 0, 0, 0.25));
}

.hover-shadow {
    transition: filter 0.3s ease;
}
.hover-shadow:hover {
    filter: drop-shadow(0 0 calc(var(--circle-size) / 2) var(--primary-color));
}

.navbar {
    width: 100vw;
    height: var(--navbar-height);
    background-color: var(--background-color);
    display: flex;
    flex-direction: row;
}

.navbar-logo-section {
    box-sizing: border-box;
    padding: 0.5rem;
    display: flex;
    align-items: center;
}
.navbar-logo-section img {
    height: 3rem;
    margin-right: var(--margin);
}
.navbar-middle-section {
    flex: 1;
}
.navbar-button-section {
    display: flex;
    flex-direction: row;
    align-items: center;
}

.navbar-button-section > button {
    margin-right: 0.5rem;
}

.navbar-button-section > img {
    height: 70%;
    aspect-ratio: 1/1;
    border-radius: 100%;
    margin-right: 0.5rem;
    user-select: none;
}

.navbar-button-section > p {
    margin-right: 0.5rem;
    user-select: none;
}

.circle-wrapper {
    position: absolute;
    /* position: fixed; */
    z-index: 100;
    transition: filter 0.3s ease;
}

.circle {
    width: calc(6 * var(--circle-size));
    padding: var(--circle-size);
    aspect-ratio: 1/1;
    overflow: scroll;
    background-color: var(--background-color);
    border-radius: 100%;
    border-width: calc(var(--circle-size) / 3);
    border-style: solid;
    display: flex;
    justify-content: center;
    align-items: center;
}

.circle::-webkit-scrollbar {
    display: none;
}

.circle-text {
    text-align: center;
    outline: none;
    border: none;
    border-radius: calc(var(--margin) / 1);
    /* border: none;
    resize: none;
    margin: 0;
    vertical-align: bottom;
    padding: 0; */
    min-width: var(--circle-size);
    font-size: var(--circle-size);
}

.circle-image {
    /* object-fit: contain;
    width: 100%;
    height: 100%; */
    background-size: cover;
    background-position: center;
}

.circle-open-button {
    /* display: none; */
    opacity: 0;
    transition: opacity 0.3s ease;
    position: absolute;
    background-color: var(--background-color);
    text-decoration: none;
    color: var(--gray);
    border-radius: calc(var(--margin) / 2);
    padding: calc(var(--margin) / 2);
    font-size: 0.75rem;
}

.circle:hover .circle-open-button {
    /* display: block; */
    opacity: 1;
}

.connection-line {
    stroke: var(--gray);
    stroke-width: calc(var(--circle-size) / 3);
    transition: all 0.3s ease;
    pointer-events: all;
}

.connection-line-selected {
    stroke: var(--primary-color);
    filter: drop-shadow(0 0 calc(var(--circle-size) / 2) var(--primary-color));
}

.connection-line:hover {
    stroke: var(--primary-color);
}

.connection-line-svg {
    position: absolute;
    pointer-events: none;
}

.editor {
    width: 100%;
    display: flex;
    flex-direction: row;
}

.editor-canvas {
    min-width: calc(100% * 10);
    min-height: calc(calc(100vh - var(--navbar-height)) * 10);
    /* overflow: hidden; */
    position: relative;
}

.editor-canvas-wrapper {
    /* width: calc(100vw - 30rem); */
    flex: 1;
}
.react-transform-wrapper {
    max-height: calc(100vh - var(--navbar-height)) !important;
    /* max-width: 100vw !important; */
}

.react-transform-component {
    min-width: calc(100% * 10) !important;
    /* max-height: calc(100vh - var(--navbar-height)) !important; */
    /* max-width: 100vw !important; */
}

.editor-sidebar {
    position: absolute;
    right: 0;
    width: 30rem;
    height: calc(100vh - var(--navbar-height));
    overflow: scroll;
    background-color: transparent;
    pointer-events: none;
    /* z-index: 100; */
    /* flex: 1; */
    padding-bottom: var(--margin);
    box-sizing: border-box;
}

.editor-sidebar::-webkit-scrollbar {
    display: none;
}

.card {
    margin-left: var(--margin);
    margin-top: var(--margin);
    margin-right: var(--margin);
    background-color: var(--background-color);
    box-sizing: border-box;
    padding: var(--margin);
    border-radius: var(--margin);
    pointer-events: all;
}

.card::-webkit-scrollbar {
    display: none;
}

.add-circle-card {
}

.connections-card {
    max-height: 17rem;
    overflow: scroll;
}

.input {
    font-size: 1rem;
    width: 100%;
    border: none;
    outline: none;
}

.connection-title {
    padding: var(--margin);
    border-radius: var(--margin);
    /* margin-bottom: var(--margin); */
    font-weight: bold;
    transition: all 0.3s ease;
    color: var(--gray);
    cursor: pointer;
    position: relative;
    /* user-select: none; */
}

.connection-title:hover {
    /* background-color: var(--primary-color);
    color: white; */
    opacity: 0.5;
}

.connection-title-selected {
    background-color: var(--primary-color);
    color: white;
}

.connection-title-top {
    position: absolute;
    height: 1rem;
    top: -1rem;
}

.connection-title-wrapper {
    /* position: absolute !important; */
    /* top: 0 !important; */
    /* left: 0 !important; */
}

.connection-text {
    outline: none;
    border: none;
    width: 100%;
    height: 10rem;
}

.color-picker-wrapper {
    box-sizing: border-box;
    padding: 1rem;
}

.circle-picker > span:first-child > div > span > div {
    border: 2px solid black !important;
    border-radius: 100%;
    box-sizing: border-box;
}

.react-contexify__item__content:hover {
    background-color: var(--primary-color) !important;
}

.create-map-input {
    font-size: 1rem;
    margin-bottom: 1rem;
}

button {
    border: none;
    outline: none;
    border-radius: var(--margin);
    padding: var(--margin);
    font-weight: bold;
    opacity: 1;
    transition: all 0.3s ease;
    user-select: none;
}

.primary-button {
    background-color: var(--primary-color);
    color: var(--background-color);
}

button:hover {
    opacity: 0.7;
}

button:active {
    opacity: 0.4;
}

.form-error {
    color: rgb(255, 68, 68);
    margin-bottom: 1rem;
}

.map-card {
    display: flex;
    flex-direction: row;
    overflow: hidden;
    position: relative;
}

.map-card button {
    margin-left: var(--margin);
}

.home-cards {
    box-sizing: border-box;
    padding: 1rem;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(30rem, 1fr));
    /* grid-template-rows: 1fr 1fr 1fr; */
    gap: 1rem 1rem;
}

.map-card-name {
    font-size: 2rem;
    margin-bottom: var(--margin);
}

.map-card-description {
    margin-bottom: var(--margin);
}

.link-button {
    display: inline-block;
    border: none;
    outline: none;
    border-radius: var(--margin);
    padding: var(--margin);
    font-weight: bold;
    opacity: 1;
    transition: all 0.3s ease;
    text-decoration: none;
}

.map-viewer-wrapper {
    flex: 1;
    overflow: hidden;
    max-height: 10rem;
}

h1 {
    color: var(--gray);
    font-size: 2rem;
    font-weight: normal;
}

.instruction-text {
    padding: 10rem;
}

.no-permission {
    display: flex;
    width: 100%;
    height: 100vh;
    justify-content: center;
    align-items: center;
}

.no-permission p {
    font-size: 2rem;
    color: var(--gray);
    margin-right: 2rem;
}
.no-permission button {
    margin-right: 2rem;
}

.timestamp-string {
    color: darkgray;
}

.ReactModal__Overlay {
    display: flex !important;
    justify-content: center !important;
    align-items: center;
}

.ReactModal__Content {
    width: 50vw;
    height: 40vh;
    position: relative !important;
    /* transform: translateY(-10vh); */
    margin-top: -15%;
    border: none !important;
    border-radius: var(--margin) !important;
    /* position: absolute; */
    /* top: 50%;
    left: 50%; */
    /* right: auto;
    bottom: auto; */
    /* margin-right: -50%; */

    display: flex;
    flex-direction: column;
    filter: drop-shadow(0 0 0.25rem rgba(0, 0, 0, 0.25));
}

.share-modal-top {
}

.share-modal-top > h1 {
    font-size: 1.5rem;
    margin-bottom: var(--margin);
}

.share-modal-middle {
    flex: 1;
    overflow: scroll;
}

/* .share-modal-email:first-child {
    border-top: 1px solid gray;
} */

.share-modal-middle::-webkit-scrollbar {
    display: none;
}

.share-modal-top input {
    background-color: var(--secondary-background-color);
    padding: calc(var(--margin) / 1);
    width: 100%;
    box-sizing: border-box;
    border-radius: var(--margin);
    margin-bottom: calc(var(--margin) / 2);
}

.share-modal-email {
    width: 100%;
    overflow: hidden;
    padding-left: var(--margin);
    padding-right: var(--margin);
    padding-top: calc(var(--margin) / 2);
    padding-bottom: calc(var(--margin) / 2);
    box-sizing: border-box;
    font-size: 1rem;
    display: flex;
}
.share-modal-email > div {
    flex: 1;
}
.share-modal-email > button {
    padding: calc(var(--margin) / 3);
    width: 2rem;
}

.share-modal-bottom {
    display: flex;
    justify-content: flex-end;
}

.share-modal-bottom-button {
    margin-left: calc(var(--margin) / 2);
}

.ReactModal__Content {
    opacity: 0;
    transform: translateY(-100px);
    transition: all 300ms ease-in-out;
}

.ReactModal__Content--after-open {
    opacity: 1;
    transform: translateX(0px);
}

.ReactModal__Content--before-close {
    opacity: 0;
    transform: translateY(-100px);
}

.ReactModal__Overlay {
    opacity: 0;
    transition: all 300ms ease-in-out;
}

.ReactModal__Overlay--after-open {
    opacity: 1;
}

.ReactModal__Overlay--before-close {
    opacity: 0;
}

input.shakeInvalid {
    animation: shake 0.5s linear;
    outline: 2px solid red;
}

@keyframes shakeInvalid {
    8%,
    41% {
        transform: translateX(-10px);
    }
    25%,
    58% {
        transform: translateX(10px);
    }
    75% {
        transform: translateX(-5px);
    }
    92% {
        transform: translateX(5px);
    }
    0%,
    100% {
        transform: translateX(0);
    }
}
